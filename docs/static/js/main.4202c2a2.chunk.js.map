{"version":3,"sources":["components/Header.js","components/main/Form.js","components/main/WindowModal.js","components/main/Calendar.js","components/main/Schedule.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","React","Component","Form","props","onSubmit","ev","handleCloseModal","preventDefault","htmlFor","type","name","id","onChange","handleInputChange","target","value","console","log","textInput","handleInputHoursInitial","handleInputFinalHours","WindowModal","hola","isOpen","hourInitial","hourFinal","onClick","Calendar","daySelected","selectDay","Fragment","onDayClick","day","handleDay","localeUtils","locale","disabledDays","Date","daysOfWeek","renderDay","canChangeMonth","Schedule","appointments","footer","href","Modal","setAppElement","App","useState","undefined","setSelectDay","modalIsOpen","setModalIsOpen","setTextInput","setHourInitial","setHourFinal","setLocale","Dates","handleModal","savedAppointments","nameClient","localStorage","getItem","finalHour","object","push","dayString","toLocaleDateString","chosenDay","split","setItem","MomentLocaleUtils","handleLocale","inputNameValue","inputHourInitialValue","inputFinalHourslValue","clickedDay","getDate","date","getMonth","getFullYear","appointmentsStyle","fontSize","textAlign","display","flexDirection","color","margin","style","backgroundColor","borderRadius","padding","filter","appointment","map","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4202c2a2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/header.scss\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <h1 className=\"title\">Quedamos y hablamos</h1>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"../../styles/Form.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Form = (props) => {\n  // lifting to close modal\n  const handleFormSubmit = (ev) => {\n    props.handleCloseModal();\n    ev.preventDefault();\n  };\n\n  // let dataAppointments = [];\n  const handleInputName = (ev) => {\n    props.handleInputChange(ev.target.value);\n    console.log(\"Â¿recibes name?\");\n  };\n\n  const handleInitialHour = (ev) => {\n    props.handleInputHoursInitial(ev.target.value);\n    console.log(\"hora recibida\");\n  };\n\n  const handleFinalHour = (ev) => {\n    props.handleInputFinalHours(ev.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit} className=\"form\">\n        <label htmlFor=\"name\" className=\"form__label\">\n          Nombre\n        </label>\n        <input\n          type=\"text\"\n          name=\"text\"\n          id=\"name\"\n          className=\"form__input\"\n          onChange={handleInputName}\n          value={props.textInput}\n        />\n\n        <label htmlFor=\"initial\" className=\"form__label\">\n          Hora Inicio\n        </label>\n        <select\n          name=\"text\"\n          id=\"initial\"\n          className=\"form__input\"\n          onChange={handleInitialHour}\n        >\n          <option value=\"--:--\">--:--</option>\n          <option value=\"09:00\">09:00</option>\n          <option value=\"10:00\">10:00</option>\n          <option value=\"11:00\">11:00</option>\n          <option value=\"12:00\">12:00</option>\n          <option value=\"13:00\">13:00</option>\n        </select>\n\n        <label htmlFor=\"final\" className=\"form__label\">\n          Hora Fin\n        </label>\n        <select\n          name=\"text\"\n          id=\"final\"\n          className=\"form__input\"\n          onChange={handleFinalHour}\n        >\n          <option value=\"--:--\">--:--</option>\n          <option value=\"10:00\">10:00</option>\n          <option value=\"11:00\">11:00</option>\n          <option value=\"12:00\">12:00</option>\n          <option value=\"13:00\">13:00</option>\n          <option value=\"14:00\">14:00</option>\n        </select>\n        {/* <button type=\"submit\" className=\"form__button\">\n          Confirmar\n        </button> */}\n      </form>\n    </>\n  );\n};\n\nForm.propTypes = {\n  textInput: PropTypes.string,\n};\n\nexport default Form;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\nimport \"../../styles/Form.scss\";\nimport Form from \"./Form\";\n\nconst WindowModal = (props) => {\n  const closeModal = () => {\n    // let close = props.isOpen ? false : null\n    props.handleCloseModal();\n\n    console.log(\"close\");\n  };\n  let hola = props.isOpen;\n  console.log(hola, props.isOpen);\n\n  return (\n    <div className=\"none\">\n      <Modal isOpen={props.isOpen}>\n        <Form\n          // handleModal={props.handleModal}\n          textInput={props.textInput}\n          hourInitial={props.hourInitial}\n          hourFinal={props.hourFinal}\n          handleInputChange={props.handleInputChange}\n          handleInputHoursInitial={props.handleInputHoursInitial}\n          handleInputFinalHours={props.handleInputFinalHours}\n        />\n        <div>\n          <button onClick={closeModal} className=\"form__btn--modal\">\n            Confirmar\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nWindowModal.propTypes = {\n  isOpen: PropTypes.bool,\n  handleModal: PropTypes.func,\n  textInput: PropTypes.string,\n  handleInputChange: PropTypes.func,\n};\nexport default WindowModal;\n","import React from \"react\";\nimport DayPicker from \"react-day-picker\";\nimport PropTypes from \"prop-types\";\nimport \"react-day-picker/lib/style.css\";\nimport \"../../styles/app.scss\";\nimport \"../../styles/calendar.scss\";\n\nconst Calendar = (props) => {\n  // lifting : listen day selected\n\n  const handleDayClick = (day) => {\n    props.handleDay(day);\n  };\n\n  const daySelected = props.selectDay;\n\n  return (\n    <React.Fragment>\n      <div className=\"containerCalendar\">\n        <div className=\"containerBackCalendar\">\n          <DayPicker\n            className=\"containerCalendar__dayPicker\"\n            onDayClick={handleDayClick}\n            selectDay={props.selectDay}\n            localeUtils={props.localeUtils}\n            locale={props.locale}\n            disabledDays={[new Date(), { daysOfWeek: [0, 6] }]}\n            renderDay={props.renderDay}\n            canChangeMonth={props.canChangeMonth}\n          />\n        </div>\n        <div className=\"containerBackCalendar__texts\">\n          <p className=\"containerBackCalendar__text--selectDay\">\n            Selecciona un dÃ­a{\" \"}\n          </p>\n          <p className=\"containerCalendar__text--selectedDay\">\n            {\" \"}\n            {daySelected ? `Has seleccionado ${daySelected}` : \"\"}\n          </p>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nCalendar.propTypes = {\n  onDayClick: PropTypes.func,\n  // selectDay: PropTypes.string,\n  locale: PropTypes.string,\n  localeUtils: PropTypes.object,\n  disabledDays: PropTypes.array,\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport \"../../styles/schedule.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Schedule = (props) => {\n  return (\n    <section className=\"containerSchedule\">\n      <DayPicker\n        localeUtils={props.localeUtils}\n        locale={props.locale}\n        appointments={props.appointments}\n        canChangeMonth={props.canChangeMonth}\n        className=\"schedule\"\n        renderDay={props.renderDay}\n        disabledDays={[new Date(), { daysOfWeek: [0, 6] }]}\n      />\n    </section>\n  );\n};\n\nSchedule.propTypes = {\n  appointments: PropTypes.array.isRequired,\n  canChangeMonth: PropTypes.bool,\n  renderDay: PropTypes.func,\n};\n\nexport default Schedule;\n","import { Fragment } from \"react\";\nimport \"../styles/Footer.scss\";\n\nconst footer = () => {\n  return (\n    <Fragment>\n      <nav className=\"footer\">\n        <ul className=\"footer__list\">\n          <li>\n            <div>\n              <a href=\"_#\" className=\"footer__list--link\">\n                Inicio\n              </a>\n            </div>\n          </li>\n          <li>\n            <div>\n              <a href=\"_#\" className=\"footer__list--link\">\n                Proyectos\n              </a>\n            </div>\n          </li>\n          <li>\n            <div>\n              <a href=\"_#\" className=\"footer__list--link\">\n                Contacto\n              </a>\n            </div>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"footer__copy\">\n        <small className=\"footer__copy--signed\">\n          {\" \"}\n          Â© Developed by EstÃ­baliz Barato with â¤ï¸{\" \"}\n        </small>\n      </div>\n    </Fragment>\n  );\n};\nexport default footer;\n","import React from \"react\";\nimport { useState } from \"react\";\n// styles\nimport \"../styles/app.scss\";\n// dataJson witch appointments\nimport Dates from \"../services/data.json\";\n// library\nimport Modal from \"react-modal\";\nimport MomentLocaleUtils from \"react-day-picker/moment\";\nimport \"moment/locale/es\";\n// components\nimport Header from \"./Header\";\nimport WindowModal from \"./main/WindowModal\";\nimport Calendar from \"./main/Calendar\";\nimport Schedule from \"./main/Schedule\";\nimport Footer from \"./Footer\";\n\n// include accesibilyty for modal, so define element modal import\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  // states\n  //const [appointments, setAppointments] = useState(Dates);\n\n  const [selectDay, setSelectDay] = useState(undefined);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [textInput, setTextInput] = useState(\"\");\n  const [hourInitial, setHourInitial] = useState(\"\");\n  const [hourFinal, setHourFinal] = useState(\"\");\n  const [locale, setLocale] = useState(\"Es\");\n\n  const appointments = Dates;\n\n  // EVENTS\n\n  const handleDay = (day) => {\n    const dayString = day.toLocaleDateString();\n    setSelectDay(dayString);\n    const selectDayArray = dayString.split(\"/\");\n    const chosenDay = selectDayArray[0];\n    console.log(chosenDay);\n    localStorage.setItem(\"day\", dayString);\n    handleModal();\n  };\n\n  // form Inputs and set data into LocalStorage\n  const handleInputChange = (inputNameValue) => {\n    setTextInput(inputNameValue);\n    console.log(inputNameValue);\n    localStorage.setItem(\"Client\", inputNameValue);\n  };\n  const handleInputHoursInitial = (inputHourInitialValue) => {\n    setHourInitial(inputHourInitialValue);\n    console.log(inputHourInitialValue);\n    localStorage.setItem(\"hourInitial\", inputHourInitialValue);\n  };\n\n  const handleInputFinalHours = (inputFinalHourslValue) => {\n    setHourFinal(inputFinalHourslValue);\n    localStorage.setItem(\"finalHour\", inputFinalHourslValue);\n  };\n\n  // posibility to change local hour inital datapicker\n  const handleLocale = () => {\n    setLocale();\n  };\n\n  // open modal\n  const handleModal = () => {\n    setModalIsOpen(true);\n  };\n  // close modale and get data from LocalSorage\n  const handleCloseModal = () => {\n    setModalIsOpen(false);\n    savedAppointments();\n    /* le estÃ¡ llegando como indefinido por eso creo que no se cierra*/\n    console.log(setModalIsOpen(false));\n  };\n\n  // JSON Get data saved from form and saved into [Dates] > json dates\n  const savedAppointments = () => {\n    let nameClient = localStorage.getItem(\"Client\");\n    let hourInitial = localStorage.getItem(\"hourInitial\");\n    let finalHour = localStorage.getItem(\"finalHour\");\n    let day = localStorage.getItem(\"day\");\n\n    const object = {\n      name: nameClient,\n      hourInitial: hourInitial,\n      finalHour: finalHour,\n      day: day,\n    };\n\n    appointments.push(object);\n\n    console.log(appointments);\n    console.log(nameClient, hourInitial, finalHour);\n  };\n\n  // mapping dates clients from json for paint in render\n\n  // RENDER > render appointments second datapicker\n  function renderDay(day) {\n    const clickedDay = day.getDate();\n    const month = day.getMonth() + 1;\n    const year = day.getFullYear();\n    const date = clickedDay + \"/\" + month + \"/\" + year;\n    const appointmentsStyle = {\n      fontSize: \"0.6em\",\n      textAlign: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      color: \"#163172\",\n      margin: \"4px 0px 4px 0px\",\n    };\n\n    // console.log(appointments);\n\n    return (\n      <div>\n        <div\n          style={\n            selectDay && selectDay === date\n              ? {\n                  color: \"white\",\n                  backgroundColor: \"purple\",\n                  borderRadius: \"50%\",\n                  padding: \"4px\",\n                }\n              : null\n          }\n        >\n          {clickedDay}\n        </div>\n        {appointments\n          .filter((appointment) => appointment.day === date)\n          .map((appointment, i) => {\n            return (\n              <div key={i} style={appointmentsStyle}>\n                <div>\n                  ï¸ <div>â{appointment.name}</div>\n                  <div>\n                    {appointment.hourInitial} {appointment.finalHour}{\" \"}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n\n  //  selectDay={selectDay ? (modalIsOpen = true) : null}\n  return (\n    <React.Fragment>\n      <Header className=\"headerContainer\" />\n      <main className=\"mainContainer\">\n        <Calendar\n          selectDay={selectDay}\n          handleDay={handleDay}\n          localeUtils={MomentLocaleUtils}\n          locale={locale}\n          handleLocale={handleLocale}\n          onClick={handleModal}\n        />\n        <section>\n          <WindowModal\n            isOpen={modalIsOpen}\n            textInput={textInput}\n            hourInitial={hourInitial}\n            hourFinal={hourFinal}\n            handleInputChange={handleInputChange}\n            handleInputHoursInitial={handleInputHoursInitial}\n            handleInputFinalHours={handleInputFinalHours}\n            handleCloseModal={handleCloseModal}\n          ></WindowModal>\n        </section>\n        <Schedule\n          localeUtils={MomentLocaleUtils}\n          locale={locale}\n          appointments={appointments}\n          canChangeMonth={true}\n          renderDay={renderDay}\n        />\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}