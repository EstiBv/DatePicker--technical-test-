{"version":3,"sources":["components/Header.js","components/main/Form.js","components/main/WindowModal.js","images/2.png","components/main/Calendar.js","components/main/Schedule.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","React","Component","Form","props","onSubmit","handleCloseModal","htmlFor","type","name","id","onChange","ev","handleInputChange","target","value","textInput","handleInputHoursInitial","handleInputFinalHours","WindowModal","isOpen","hourInitial","hourFinal","onClick","Calendar","daySelected","selectDay","Fragment","onDayClick","day","handleDay","localeUtils","locale","disabledDays","Date","daysOfWeek","renderDay","canChangeMonth","src","img","alt","Schedule","appointments","footer","Modal","setAppElement","App","useState","undefined","setSelectDay","modalIsOpen","setModalIsOpen","setTextInput","setHourInitial","setHourFinal","setLocale","Dates","handleModal","savedAppointments","object","localStorage","getItem","finalHour","push","dayString","toLocaleDateString","chosenDay","split","console","log","setItem","MomentLocaleUtils","handleLocale","inputNameValue","inputHourInitialValue","inputFinalHourslValue","clickedDay","getDate","date","getMonth","getFullYear","appointmentsStyle","fontSize","textAlign","display","flexDirection","backgroundColor","boxShadow","borderRadius","marginTop","style","color","padding","filter","appointment","map","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"u/BAYeA,E,uKARX,OACE,mCACE,qBAAKC,UAAU,gB,GAJFC,IAAMC,WC6EZC,G,MA3EF,SAACC,GAkBZ,OACE,mCACE,uBAAMC,SAlBe,WACvBD,EAAME,oBAiB8BN,UAAU,OAA5C,UACE,uBAAOO,QAAQ,OAAOP,UAAU,cAAhC,oBAGA,uBACEQ,KAAK,OACLC,KAAK,OACLC,GAAG,OACHV,UAAU,cACVW,SAvBgB,SAACC,GACvBR,EAAMS,kBAAkBD,EAAGE,OAAOC,QAuB5BA,MAAOX,EAAMY,YAGf,uBAAOT,QAAQ,UAAUP,UAAU,cAAnC,yBAGA,yBACES,KAAK,OACLC,GAAG,UACHV,UAAU,cACVW,SA9BkB,SAACC,GACzBR,EAAMa,wBAAwBL,EAAGE,OAAOC,QAyBpC,UAME,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,sBAGF,uBAAOR,QAAQ,QAAQP,UAAU,cAAjC,sBAGA,yBACES,KAAK,OACLC,GAAG,QACHV,UAAU,cACVW,SA3CgB,SAACC,GACvBR,EAAMc,sBAAsBN,EAAGE,OAAOC,QAsClC,UAME,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,6BC5BKI,EAlCK,SAACf,GAMnB,OACE,qBAAKJ,UAAU,iBAAf,SACE,eAAC,IAAD,CAAOoB,OAAQhB,EAAMgB,OAArB,UACE,cAAC,EAAD,CAEEJ,UAAWZ,EAAMY,UACjBK,YAAajB,EAAMiB,YACnBC,UAAWlB,EAAMkB,UACjBT,kBAAmBT,EAAMS,kBACzBI,wBAAyBb,EAAMa,wBAC/BC,sBAAuBd,EAAMc,wBAE/B,8BACE,wBAAQK,QAjBG,WACjBnB,EAAME,oBAgB6BN,UAAU,mBAAvC,+B,iBCzBK,G,YAAA,IAA0B,+BC4D1BwB,EApDE,SAACpB,GAEhB,IAKMqB,EAAcrB,EAAMsB,UAE1B,OACE,cAAC,IAAMC,SAAP,UACE,sBAAK3B,UAAU,oBAAf,UACE,qBAAKA,UAAU,+BAAf,SACE,cAAC,IAAD,CACEA,UAAU,0CACV4B,WAba,SAACC,GACtBzB,EAAM0B,UAAUD,IAaRH,UAAWtB,EAAMsB,UACjBK,YAAa3B,EAAM2B,YACnBC,OAAQ5B,EAAM4B,OACdC,aAAc,CAAC,IAAIC,KAAQ,CAAEC,WAAY,CAAC,EAAG,KAC7CC,UAAWhC,EAAMgC,UACjBC,eAAgBjC,EAAMiC,mBAG1B,sBAAKrC,UAAU,2BAAf,UACE,oBAAGA,UAAU,sCAAb,iCACoB,OAEpB,oBAAGA,UAAU,wCAAb,UACG,IACAyB,EAAW,2BAAuBA,GAAgB,SAGvD,qBAAKzB,UAAU,4BAAf,SACE,qBACEsC,IAAKC,EACLC,IAAI,YACJxC,UAAU,2CCjBPyC,G,MAtBE,SAACrC,GAChB,OACE,yBAASJ,UAAU,oBAAnB,SACE,cAAC,IAAD,CACE+B,YAAa3B,EAAM2B,YACnBC,OAAQ5B,EAAM4B,OACdU,aAActC,EAAMsC,aACpBL,eAAgBjC,EAAMiC,eACtBrC,UAAU,WACVoC,UAAWhC,EAAMgC,UACjBH,aAAc,CAAC,IAAIC,KAAQ,CAAEC,WAAY,CAAC,EAAG,WCDtCQ,G,MAZA,WACb,OACE,cAAC,WAAD,UACE,qBAAK3C,UAAU,wBAAf,SACE,wBAAOA,UAAU,0BAAjB,UACG,IADH,0DAE0C,aCSlD4C,IAAMC,cAAc,SAEpB,IA4KeC,EA5KH,WAAM,MAEkBC,wBAASC,GAF3B,mBAETtB,EAFS,KAEEuB,EAFF,OAGsBF,oBAAS,GAH/B,mBAGTG,EAHS,KAGIC,EAHJ,OAIkBJ,mBAAS,IAJ3B,mBAIT/B,EAJS,KAIEoC,EAJF,OAKsBL,mBAAS,IAL/B,mBAKT1B,EALS,KAKIgC,EALJ,OAMkBN,mBAAS,IAN3B,mBAMTzB,EANS,KAMEgC,EANF,OAOYP,mBAAS,MAPrB,mBAOTf,EAPS,KAODuB,EAPC,KAUVb,EAAec,EAsCfC,EAAc,WAClBN,GAAe,IAUXO,EAAoB,WACxB,IAKMC,EAAS,CACblD,KANemD,aAAaC,QAAQ,UAOpCxC,YANgBuC,aAAaC,QAAQ,eAOrCC,UANcF,aAAaC,QAAQ,aAOnChC,IANQ+B,aAAaC,QAAQ,QAS/BnB,EAAaqB,KAAKJ,IA2DpB,OACE,eAAC,IAAMhC,SAAP,WACE,wBAAQ3B,UAAU,kBAAlB,SACE,cAAC,EAAD,MAEF,uBAAMA,UAAU,gBAAhB,UACE,cAAC,EAAD,CACE0B,UAAWA,EACXI,UA7HU,SAACD,GACjB,IAAMmC,EAAYnC,EAAIoC,qBACtBhB,EAAae,GAEb,IAEME,EAFiBF,EAAUG,MAAM,KAEN,GACjCC,QAAQC,IAAIH,GACZN,aAAaU,QAAQ,MAAON,GAE5BP,KAoHM1B,YAAawC,IACbvC,OAAQA,EACRwC,aAnGa,WACnBjB,KAmGMhC,QAASkC,IAEX,yBAASzD,UAAU,iBAAnB,SACE,cAAC,EAAD,CACEoB,OAAQ8B,EACRlC,UAAWA,EACXK,YAAaA,EACbC,UAAWA,EACXT,kBA3HgB,SAAC4D,GACzBrB,EAAaqB,GACbb,aAAaU,QAAQ,SAAUG,IA0HvBxD,wBAxHsB,SAACyD,GAC/BrB,EAAeqB,GACfd,aAAaU,QAAQ,cAAeI,IAuH5BxD,sBApHoB,SAACyD,GAC7BrB,EAAaqB,GACbf,aAAaU,QAAQ,YAAaK,IAmH1BrE,iBAtGe,WACvB6C,GAAe,GACfO,SAuGI,cAAC,EAAD,CACE3B,YAAawC,IACbvC,OAAQA,EACRU,aAAcA,EACdL,gBAAgB,EAChBD,UAtFR,SAAmBP,GACjB,IAAM+C,EAAa/C,EAAIgD,UAIjBC,EAAOF,EAAa,KAFZ/C,EAAIkD,WAAa,GAES,IAD3BlD,EAAImD,cAEXC,EAAoB,CACxBC,SAAU,OACVC,UAAW,SACXC,QAAS,OACTC,cAAe,SACfC,gBAAiB,iBACjBC,UAAW,2BACXC,aAAc,MACdC,UAAW,OAGb,OACE,gCACE,qBACEC,MACEhE,GAAaA,IAAcoD,EACvB,CACEI,SAAU,UACVS,MAAO,UACPL,gBAAiB,eACjBE,aAAc,MACdI,QAAS,MACTL,UAAW,gCAEb,KAXR,SAcGX,IAGFlC,EACEmD,QAAO,SAACC,GAAD,OAAiBA,EAAYjE,MAAQiD,KAC5CiB,KAAI,SAACD,EAAaE,GACjB,OACE,qBAAaN,MAAOT,EAApB,SACE,yCACG,8BAAMa,EAAYrF,OACnB,gCACE,sBAAKT,UAAU,SAAf,2BAA6B8F,EAAYzE,YAAzC,OAA6D,IAC7D,sBAAKrB,UAAU,SAAf,oBAA2B8F,EAAYhC,UAAvC,cALIkC,eAiDlB,wBAAQhG,UAAU,kBAAlB,SACE,cAAC,EAAD,UC9KOiG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.dd86984b.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"title\"></div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"../../styles/Form.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Form = (props) => {\n  // liftings\n  const handleFormSubmit = () => {\n    props.handleCloseModal();\n  };\n\n  const handleInputName = (ev) => {\n    props.handleInputChange(ev.target.value);\n  };\n\n  const handleInitialHour = (ev) => {\n    props.handleInputHoursInitial(ev.target.value);\n  };\n\n  const handleFinalHour = (ev) => {\n    props.handleInputFinalHours(ev.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit} className=\"form\">\n        <label htmlFor=\"name\" className=\"form__label\">\n          Nombre\n        </label>\n        <input\n          type=\"text\"\n          name=\"text\"\n          id=\"name\"\n          className=\"form__input\"\n          onChange={handleInputName}\n          value={props.textInput}\n        />\n\n        <label htmlFor=\"initial\" className=\"form__label\">\n          Hora Inicio\n        </label>\n        <select\n          name=\"text\"\n          id=\"initial\"\n          className=\"form__input\"\n          onChange={handleInitialHour}\n        >\n          <option value=\"--:--\">--:--</option>\n          <option value=\"09:00\">09:00</option>\n          <option value=\"10:00\">10:00</option>\n          <option value=\"11:00\">11:00</option>\n          <option value=\"12:00\">12:00</option>\n          <option value=\"13:00\">13:00</option>\n        </select>\n\n        <label htmlFor=\"final\" className=\"form__label\">\n          Hora Fin\n        </label>\n        <select\n          name=\"text\"\n          id=\"final\"\n          className=\"form__input\"\n          onChange={handleFinalHour}\n        >\n          <option value=\"--:--\">--:--</option>\n          <option value=\"10:00\">10:00</option>\n          <option value=\"11:00\">11:00</option>\n          <option value=\"12:00\">12:00</option>\n          <option value=\"13:00\">13:00</option>\n          <option value=\"14:00\">14:00</option>\n        </select>\n      </form>\n    </>\n  );\n};\n\nForm.propTypes = {\n  textInput: PropTypes.string,\n};\n\nexport default Form;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\nimport \"../../styles/Form.scss\";\nimport Form from \"./Form\";\n\nconst WindowModal = (props) => {\n  // lifting\n  const closeModal = () => {\n    props.handleCloseModal();\n  };\n\n  return (\n    <div className=\"containerModal\">\n      <Modal isOpen={props.isOpen}>\n        <Form\n          // handleModal={props.handleModal}\n          textInput={props.textInput}\n          hourInitial={props.hourInitial}\n          hourFinal={props.hourFinal}\n          handleInputChange={props.handleInputChange}\n          handleInputHoursInitial={props.handleInputHoursInitial}\n          handleInputFinalHours={props.handleInputFinalHours}\n        />\n        <div>\n          <button onClick={closeModal} className=\"form__btn--modal\">\n            Confirmar\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nWindowModal.propTypes = {\n  isOpen: PropTypes.bool,\n  handleModal: PropTypes.func,\n  textInput: PropTypes.string,\n  handleInputChange: PropTypes.func,\n};\nexport default WindowModal;\n","export default __webpack_public_path__ + \"static/media/2.ce4c4642.png\";","import React from \"react\";\nimport DayPicker from \"react-day-picker\";\nimport PropTypes from \"prop-types\";\nimport \"react-day-picker/lib/style.css\";\nimport \"../../styles/app.scss\";\nimport \"../../styles/calendar.scss\";\nimport img from \"../../images/2.png\";\n\nconst Calendar = (props) => {\n  // lifting\n  const handleDayClick = (day) => {\n    props.handleDay(day);\n  };\n\n  // props select day for render\n  const daySelected = props.selectDay;\n\n  return (\n    <React.Fragment>\n      <div className=\"containerCalendar\">\n        <div className=\"containerCalendar__dayPicker\">\n          <DayPicker\n            className=\"containerCalendar__dayPicker--component\"\n            onDayClick={handleDayClick}\n            selectDay={props.selectDay}\n            localeUtils={props.localeUtils}\n            locale={props.locale}\n            disabledDays={[new Date(), { daysOfWeek: [0, 6] }]}\n            renderDay={props.renderDay}\n            canChangeMonth={props.canChangeMonth}\n          />\n        </div>\n        <div className=\"containerCalendar__texts\">\n          <p className=\"containerCalendar__texts--selectDay\">\n            Selecciona un día{\" \"}\n          </p>\n          <p className=\"containerCalendar__texts--selectedDay\">\n            {\" \"}\n            {daySelected ? `Has seleccionado ${daySelected}` : \"\"}\n          </p>\n        </div>\n        <div className=\"containerCalendar__imgBox\">\n          <img\n            src={img}\n            alt=\"lamp draw\"\n            className=\"containerCalendar__imgBox--img\"\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nCalendar.propTypes = {\n  onDayClick: PropTypes.func,\n  locale: PropTypes.string,\n  localeUtils: PropTypes.object,\n  disabledDays: PropTypes.array,\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport \"../../styles/schedule.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Schedule = (props) => {\n  return (\n    <section className=\"containerSchedule\">\n      <DayPicker\n        localeUtils={props.localeUtils}\n        locale={props.locale}\n        appointments={props.appointments}\n        canChangeMonth={props.canChangeMonth}\n        className=\"schedule\"\n        renderDay={props.renderDay}\n        disabledDays={[new Date(), { daysOfWeek: [0, 6] }]}\n      />\n    </section>\n  );\n};\n\nSchedule.propTypes = {\n  appointments: PropTypes.array.isRequired,\n  canChangeMonth: PropTypes.bool,\n  renderDay: PropTypes.func,\n};\n\nexport default Schedule;\n","import { Fragment } from \"react\";\nimport \"../styles/Footer.scss\";\n\nconst footer = () => {\n  return (\n    <Fragment>\n      <div className=\"containerFooter__copy\">\n        <small className=\"containerFooter--signed\">\n          {\" \"}\n          © Developed by Estíbaliz Barato with ❤︎{\" \"}\n        </small>\n      </div>\n    </Fragment>\n  );\n};\nexport default footer;\n","import React from \"react\";\nimport { useState } from \"react\";\n// styles\nimport \"../styles/app.scss\";\n// dataJson\nimport Dates from \"../services/data.json\";\n// libraries\nimport Modal from \"react-modal\";\nimport MomentLocaleUtils from \"react-day-picker/moment\";\nimport \"moment/locale/es\";\n// components\nimport Header from \"./Header\";\nimport WindowModal from \"./main/WindowModal\";\nimport Calendar from \"./main/Calendar\";\nimport Schedule from \"./main/Schedule\";\nimport Footer from \"./Footer\";\n\n// include access for modal, so define element modal import\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  // states\n  const [selectDay, setSelectDay] = useState(undefined);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [textInput, setTextInput] = useState(\"\");\n  const [hourInitial, setHourInitial] = useState(\"\");\n  const [hourFinal, setHourFinal] = useState(\"\");\n  const [locale, setLocale] = useState(\"Es\");\n\n  // dates from json\n  const appointments = Dates;\n\n  // EVENTS\n  /* 1 -> turn into day a string 2 -> delete slash from string 3 -> select day from calendar | 4 -> set in LocalStorage */\n  const handleDay = (day) => {\n    const dayString = day.toLocaleDateString();\n    setSelectDay(dayString);\n\n    const selectDayArray = dayString.split(\"/\");\n\n    const chosenDay = selectDayArray[0];\n    console.log(chosenDay);\n    localStorage.setItem(\"day\", dayString);\n\n    handleModal();\n  };\n\n  // Inputs value from the form and set data into LocalStorage\n  const handleInputChange = (inputNameValue) => {\n    setTextInput(inputNameValue);\n    localStorage.setItem(\"Client\", inputNameValue);\n  };\n  const handleInputHoursInitial = (inputHourInitialValue) => {\n    setHourInitial(inputHourInitialValue);\n    localStorage.setItem(\"hourInitial\", inputHourInitialValue);\n  };\n\n  const handleInputFinalHours = (inputFinalHourslValue) => {\n    setHourFinal(inputFinalHourslValue);\n    localStorage.setItem(\"finalHour\", inputFinalHourslValue);\n  };\n\n  // handle to change local hour (change the value at inital state, ej: \"it\" from italy )\n  const handleLocale = () => {\n    setLocale();\n  };\n\n  // open modal (initial state is false)\n  const handleModal = () => {\n    setModalIsOpen(true);\n  };\n  // close modale and get data from LocalSorage\n  const handleCloseModal = () => {\n    setModalIsOpen(false);\n    savedAppointments();\n  };\n\n  /* JSON  1 -> Get data saved from the form and day selected \n  2 -> push dates into array Dates (new object into appointments) */\n  const savedAppointments = () => {\n    let nameClient = localStorage.getItem(\"Client\");\n    let hourInitial = localStorage.getItem(\"hourInitial\");\n    let finalHour = localStorage.getItem(\"finalHour\");\n    let day = localStorage.getItem(\"day\");\n\n    const object = {\n      name: nameClient,\n      hourInitial: hourInitial,\n      finalHour: finalHour,\n      day: day,\n    };\n\n    appointments.push(object);\n  };\n\n  // RENDER > render appointments on the second date picker\n  function renderDay(day) {\n    const clickedDay = day.getDate();\n    // months array begin to 0\n    const month = day.getMonth() + 1;\n    const year = day.getFullYear();\n    const date = clickedDay + \"/\" + month + \"/\" + year;\n    const appointmentsStyle = {\n      fontSize: \"14px\",\n      textAlign: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: \"var(--medium2)\",\n      boxShadow: \"2px 2px 3px var(--dark1)\",\n      borderRadius: \"5px\",\n      marginTop: \"2px\",\n    };\n\n    return (\n      <div>\n        <div\n          style={\n            selectDay && selectDay === date\n              ? {\n                  fontSize: \"x-large\",\n                  color: \"#e5ffff\",\n                  backgroundColor: \"var(--dark1)\",\n                  borderRadius: \"50%\",\n                  padding: \"4px\",\n                  boxShadow: \"2px 2px 3px var(--basicDark)\",\n                }\n              : null\n          }\n        >\n          {clickedDay}\n        </div>\n        {/* filter and mapping Dates and selected day  */}\n        {appointments\n          .filter((appointment) => appointment.day === date)\n          .map((appointment, i) => {\n            return (\n              <div key={i} style={appointmentsStyle}>\n                <div>\n                  ︎<div>{appointment.name}</div>\n                  <div>\n                    <sup className=\"supDay\"> 🕛 {appointment.hourInitial} </sup>{\" \"}\n                    <sup className=\"supDay\">➡ {appointment.finalHour} </sup>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <header className=\"headerContainer\">\n        <Header />\n      </header>\n      <main className=\"mainContainer\">\n        <Calendar\n          selectDay={selectDay}\n          handleDay={handleDay}\n          localeUtils={MomentLocaleUtils}\n          locale={locale}\n          handleLocale={handleLocale}\n          onClick={handleModal}\n        />\n        <section className=\"modalContainer\">\n          <WindowModal\n            isOpen={modalIsOpen}\n            textInput={textInput}\n            hourInitial={hourInitial}\n            hourFinal={hourFinal}\n            handleInputChange={handleInputChange}\n            handleInputHoursInitial={handleInputHoursInitial}\n            handleInputFinalHours={handleInputFinalHours}\n            handleCloseModal={handleCloseModal}\n          ></WindowModal>\n        </section>\n        <Schedule\n          localeUtils={MomentLocaleUtils}\n          locale={locale}\n          appointments={appointments}\n          canChangeMonth={true}\n          renderDay={renderDay}\n        />\n      </main>\n      <footer className=\"containerFooter\">\n        <Footer />\n      </footer>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}